{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Seafile Admin Manual","text":"<p>This manual serves as an extension to the official Seafile Administration Manual. It introduces a new deployment approach tailored for ease and efficiency, particularly using Docker images and environment variable-based configuration.</p> <p>New deployment method from datamate</p> <p>Maintained by Datamate GmbH &amp; Co. KG, the primary support and sales partner of Seafile in Europe, this manual provides guidance on the simplified installation and configuration process that we have developed to enhance the deployment and management of Seafile.</p> <p>Only use this if you are aware of the differences regarding the official seafile deployment.</p> <p>Currently Beta</p> <p>This version is brand new and still a work in progress; it is not recommended for production use unless you are already familiar with Seafile.</p>"},{"location":"#why-a-new-deployment-approach","title":"Why a New Deployment Approach?","text":"<p>This new deployment approach focuses on simplifying the installation of Seafile using Docker images and managing the entire configuration through environment variables.</p> <p>The key advantages of this approach include:</p> <ul> <li>Quick and Easy Deployment: Deploy Seafile within minutes, reducing the time and effort traditionally required.</li> <li>Centralized Configuration Management: With all configurations handled in a single location, administration becomes more straightforward and less prone to error.</li> <li>Improved Documentation: Documenting changes is simplified, providing clear and concise records of configurations.</li> </ul> <p>We  Docker and Kubernetes</p> <p>This approach was primarily driven by the need to create a Kubernetes-compatible deployment, offering flexibility and scalability for modern cloud environments.</p>"},{"location":"#is-the-seafile-version-different","title":"Is the Seafile Version Different?","text":"<p>No, Seafile is still the same</p> <p>It\u2019s important to note that while this deployment utilizes custom Seafile Professional Docker images (available at Docker Hub) but the core Seafile software remains unchanged. The primary modification lies in the initialization scripts, which have been adapted to allow for configuration through environment variables.</p> <p>For those interested in the technical details of how these Seafile Professional images are built, check out our Dockerfile we use to build our containers available at our  Github repository datamate-rethink-it/seafile-release.</p> <p>Currently we support only Seafile Professional</p> <p>This new deployment supports only Seafile Professional. As a result, you will need a Seafile license, or you can use the free version, which is limited to a maximum of three users. Seafile Community might only be used for a Single Node installation via Docker. For a cluster setup you will always need a Seafile License.</p> <p>If you need a license, feel free to send us a request for a quote at seafile@datamate.org.</p> <p>Alright, let's get started with deploying Seafile, the world\u2019s fastest and most reliable self-hosted sync-and-share solution.</p>"},{"location":"configuration/available-variables/","title":"Available variables","text":""},{"location":"configuration/concept/","title":"Concept","text":""},{"location":"configuration/authentication/overview/","title":"authentication overview","text":""},{"location":"docker/cluster/","title":"Installing a Seafile Cluster with Docker","text":"<p>A Seafile cluster is composed of three or more servers, each fulfilling specific roles to ensure efficient operation. The cluster setup includes a backend server dedicated to non-time-critical tasks such as file indexing, antivirus scanning, and email notifications. This server also runs essential services like Memcached and Elasticsearch.</p> <p>In addition to the backend server, the cluster requires two or more frontend servers to handle user requests.</p> <p>Seafile relies on a SQL database, so we deploy a Galera cluster in active-active mode across all servers. For data storage, we recommend using S3.</p>"},{"location":"docker/cluster/#cluster-components","title":"Cluster Components","text":"Backend ServerFrontend ServersLoadbalancer <p>The backend server runs the following Docker containers:</p> <ul> <li>Seafile</li> <li>MariaDB (Galera)</li> <li>Memcached</li> <li>Elasticsearch</li> </ul> <p>Hardware Recommendations: At least 4 CPUs and 8 GB of RAM.</p> <p>Each frontend server runs:</p> <ul> <li>Seafile</li> <li>MariaDB (Galera)</li> </ul> <p>Hardware Recommendations: At least 2 CPUs and 4 GB of RAM.</p> <p>A load balancer is typically required to distribute traffic across the servers. If you don\u2019t have one, we provide instructions for setting up a simple load balancer using Caddy, though this will require an additional (fourth) server.</p> <p>Hardware Recommendations: At least 1 CPUs and 1 GB of RAM.</p> <p>This setup is well-suited for handling up to several hundred users. If your frontend servers experience resource limitations, consider adding additional frontend servers. If the backend server becomes resource-constrained, you can improve performance by adding more CPU and RAM.</p> <p>Cluster does not automatically mean high-availability</p> <p>While this setup enhances resilience, it does not ensure full high availability. Not all components are redundant, meaning certain failures may still cause disruptions.</p> <p>Frontend nodes can fail without affecting the overall operation, but if the backend server fails, some background tasks, such as file indexing and notifications, may be temporarily unavailable. Despite this, Seafile will continue to function in most cases.</p> <p>Seafile currently supports one single backend server.</p>"},{"location":"docker/cluster/#visualization-of-the-seafile-cluster","title":"Visualization of the Seafile Cluster","text":"<p>Placeholder...</p>"},{"location":"docker/cluster/#general-installation-steps","title":"General Installation Steps","text":"<p>The installation process for all three servers follows similar steps:</p> <ul> <li>Install Docker runtime.</li> <li>Download the YAML and .env files.</li> <li>Make the necessary modifications to the .env file.</li> <li>Start the backend server first to initialize the Galera cluster.</li> <li>Then, start the frontend servers.</li> </ul> <p>Let's get started.</p>"},{"location":"docker/cluster/#install-basic-tools","title":"Install basic tools","text":"<p>The following command installs basic tools that are used in the following manual. Usually all these tools are already installed on your linux server.</p> <pre><code>apt update &amp;&amp; \\\napt -y install curl pwgen tree wget tar nano\n</code></pre>"},{"location":"docker/cluster/#install-docker-and-docker-compose-plugin","title":"Install Docker and Docker Compose Plugin","text":"<p>At get.docker.com, you'll find a script designed for the easy and convenient installation of the Docker Engine. While the script isn't recommended for production environments, it has shown no issues in our observations. You can effortlessly install Docker using this single command:</p> <pre><code>curl -fsSL get.docker.com | bash\n</code></pre> <p>Alternatively, you can opt to follow Docker's official installation instructions</p>"},{"location":"docker/cluster/#install-seafile-server","title":"Install Seafile Server","text":"<p>This installation assumes that all Seafile components are installed under <code>/opt</code>. We highly recommended to keep this folder structure. All articles in the manual assume Seafile's installation in this directory.</p>"},{"location":"docker/cluster/#1-create-basic-structure","title":"1. Create basic structure","text":"<p>Simply copy and paste the following command into your command line to execute. This code will download the latest yml files from repository  seafile-release.</p> <pre><code>mkdir /opt/seafile-compose &amp;&amp; \\\ncd /opt/seafile-compose &amp;&amp; \\\nwget -c https://github.com/datamate-rethink-it/seafile-release/releases/latest/download/seafile-compose.tar.gz \\\n-O - | tar -xz -C /opt/seafile-compose &amp;&amp; \\\ncp -n .env-release .env\n</code></pre> <p>Don't change these yml files</p> <p>Generally, there's no need to make changes to the different .yml files in most cases. Also they will be overriden with the next update. Instead you should create a copy and rename the file. Adjustments should be made only by experienced Docker administrators.</p> <pre><code># Example to create a custom copy:\ncp seafile-pe.yml custom-seafile-pe.yml\n</code></pre>"},{"location":"docker/cluster/#2-create-some-directories","title":"2. Create some directories","text":"<p>Elastisearch does not run as root user and therefore it is necessary to create the directory for the volume mount upfront. Otherwise elasticsearch has no permission to write into this directory. Also Galera requires a directory with the right permissions.</p> <pre><code>mkdir -p /opt/seafile-elasticsearch/data &amp;&amp; \\\nchown -R 1000 /opt/seafile-elasticsearch\n\nmkdir -p /opt/seafile-galera/mariadb &amp;&amp; \\\nchown 1001 /opt/seafile-galera/mariadb\n</code></pre>"},{"location":"docker/cluster/#3-generate-some-secrets","title":"3. Generate some secrets","text":"<p>Seafile is configured with the hidden <code>.env</code> file (=enviroment configuration file) that is stored in the folder <code>/opt/seafile-compose</code>.</p> <p>We utilize <code>pwgen</code> to create secure passwords for your admin account, the database root password and other stuff. The following commands will generate such passwords and include them in the <code>.env'</code> file.</p> <pre><code>sed -i \"s/^SEAFILE_ADMIN_PASSWORD=.*/SEAFILE_ADMIN_PASSWORD=$(pwgen 40 1)/\" .env\nsed -i \"s/^SEAFILE_MYSQL_ROOT_PASSWORD=.*/SEAFILE_MYSQL_ROOT_PASSWORD=$(pwgen 40 1)/\" .env\nsed -i \"s/^SEAHUB__SECRET_KEY=.*/SEAHUB__SECRET_KEY=$(pwgen 40 1)/\" .env\nsed -i \"s/^SEAFILE__notification__jwt_private_key=.*/SEAFILE__notification__jwt_private_key=$(pwgen 40 1)/\" .env\n</code></pre> <p>Alternatively, you can manually add your own passwords.</p> <p>Consistent Secrets Across All Servers</p> <p>Do not generate new secrets for each server. Seafile requires the same secrets to be used on all servers.</p>"},{"location":"docker/cluster/#4-complete-settings-in-the-env-file","title":"4. Complete settings in the .env file","text":"<p>Open the <code>.env</code> file with the editor of your choice, like <code>nano</code> or <code>vim</code>.</p> <pre><code>nano /opt/seafile-compose/.env\n</code></pre> <p>Continue setting up your Seafile server by adjusting only three more variables. These are:</p> <ul> <li>TIME_ZONE</li> <li>SEAFILE_SERVER_HOSTNAME</li> <li>SEAFILE_ADMIN_EMAIL</li> </ul> <pre><code># components to be used\nCOMPOSE_FILE='caddy.yml,seafile-pe.yml' # (1)!\nCOMPOSE_PATH_SEPARATOR=','\n\n# system settings\nTIME_ZONE='Europe/Berlin' # (2)!\n\n# seafile server base url\nSEAFILE_SERVER_HOSTNAME='seafile.example.com' # (3)!\n\n# initial web admin\nSEAFILE_ADMIN_EMAIL='me@example.com'\nSEAFILE_ADMIN_PASSWORD='topsecret'\n\n# database\nSEAFILE_MYSQL_ROOT_PASSWORD=\n\n# seahub secret key\nSEAHUB__SECRET_KEY=\n\n# jwt private key for seafile notification server\nSEAFILE__notification__jwt_private_key=\n\n## cluster setup\n# Private IP address of your elasticsearch host\nELASTICSEARCH_HOST=\n\n# Private IP address of your memcached host\nMEMCACHED_HOST=\n\n## Galera Cluster (Backend config)\nMARIADB_GALERA_CLUSTER_BOOTSTRAP='no' # valid values are \"yes\" and \"no\"   -&gt; yes means first galera node\nMARIADB_GALERA_CLUSTER_NAME='seafile-galera-cluster'\nMARIADB_GALERA_MARIABACKUP_USER='maria_backup_user'\nMARIADB_GALERA_MARIABACKUP_PASSWORD='yyy'\nMARIADB_ROOT_PASSWORD='xxx'\nMARIADB_REPLICATION_PASSWORD='zzz'\nMARIADB_REPLICATION_USER='maria_replication_user'\nMARIADB_ENABLE_TLS='no'\n\n## cluster definiton node private ip\n# Private IP address of seafile-backend\nSEAFILE_CLUSTER_0_IP=\n# Private IP address of seafile-frontend-1\nSEAFILE_CLUSTER_1_IP=\n# Private IP address of seafile-frontend-2\nSEAFILE_CLUSTER_2_IP=\n# cluster definitopn node name\nSEAFILE_CLUSTER_0_NAME='seafile-cluster-0'\nSEAFILE_CLUSTER_1_NAME='seafile-cluster-1'\nSEAFILE_CLUSTER_2_NAME='seafile-cluster-2'\n\n# These variables need to be defined after SEAFILE_CLUSTER_* since they reference them\nNODE_PRIVATE_HOSTNAME=\nNODE_PRIVATE_IP=\n</code></pre> <ol> <li>COMPOSE_FILE is a comma separated list without spaces. This list defines which components should run on this server. Leave <code>caddy.yml</code> and <code>seatable-server.yml</code> at the beginning. You will add more components at a later time.</li> <li>Get a list of timezones from Wikipedia.</li> <li>Select your domain or subdomain that points to your Server (without https://). You have to set an A-Record or CNAME pointing to your IP.     If you don't have an URL and want to use an IP, then use the free service nip.io and add your-ip.nip.io (e.g. 5.35.28.112.nip.io).</li> </ol>"},{"location":"docker/cluster/#5-get-a-license","title":"5. Get a license","text":"<p>Seafile Enterprise requires a license to start</p> <p>Seafile use for up to three users is free. If you enjoy Seafile and are contemplating a larger license, please get in touch with us.</p> <p>We assume that you have a license and that you save it to <code>/opt/seafile-compose/seafile-license.txt</code>.</p>"},{"location":"docker/cluster/#6-start-the-backend-server","title":"6. Start the backend server","text":"<p>Now it is time to run the following command to download and initiate the docker images for the initial setup on the backend server. This process will require some time.</p> <p>We start with the backend server to initialize the database cluster.</p> <pre><code>docker compose up -d\n</code></pre>"},{"location":"docker/cluster/#7-start-the-frontend-servers","title":"7. Start the frontend servers","text":"<p>Now it is time to start also the frontend nodes.</p> <pre><code>docker compose up -d\n</code></pre>"},{"location":"docker/cluster/#8-load-balancer","title":"8. Load Balancer","text":"<p>Now the frontend nodes should provide their services on port 80. Target the load balancer to these servers and you should be read to go...</p> <p>If the process completed successfully, you can now open your web browser and access Seafile using the URL you specified in your <code>.env</code> file. Sign in using the credentials you provided in the same file.</p> <p> Congratulations! You've completed the basic setup of your Seafile Server.</p>"},{"location":"docker/concept/","title":"Core Concept of the Seafile Deployment with Docker","text":"<p>A Seafile Server consists of multiple containers. Therefore let's talk about how you typically install such a system.</p>"},{"location":"docker/concept/#multi-container-installations-can-be-intricate","title":"Multi-container installations can be intricate","text":"<p>Usually, software relying on multiple containers involves a large and complex <code>docker-compose.yml</code> file. This complexity intensifies with optional containers, leading to bloated files or the need to manually manage additional services. This is quite a challenging task.</p> <p>In addition, consistently maintaining correct indentation and syntax alignment in the YAML file demands caution. In summary, this process can be cumbersome, prone to errors, and challenging\u2014particularly for beginners or users unfamiliar with docker-compose files.</p> <p>Also Seafile requires typically that you start the docker container and then edit the configuration files after the first start. This is no longer up to date.</p>"},{"location":"docker/concept/#we-want-to-keep-it-simple","title":"We want to keep it simple ...","text":"<p>Instead of handling one extensive docker-compose.yml file and configure Seafile after the initial start, we present a more structured approach:</p> <ul> <li>We provide a set of individual yml files and one .env file.</li> <li>Each yml file defines commands for installing a specific component, such as the Seafile Server, web proxy (caddy), or an Office Editor.</li> <li>An accompanying .env file manages environment variables to configure your setup.</li> <li>Every configuration can be done in the .yml files.</li> </ul>"},{"location":"docker/concept/#layered-structure","title":"Layered structure","text":"<p>Think of the .env file as a recipe for your setup and the yml files are like ingredients.</p> <p>Create copy for custom changes of the yml files</p> <p>Generally, there's no need to modify the YAML files. We provide updated YAML files with each new Seafile version. However, if you wish to make alterations, create a copy and name it something like <code>custom-...yml</code>.</p> <p>You can configure components in the .env file, determining which ones to install. Start with essential components like Seafile Server and Caddy web proxy.</p> <p>Example in the .env file:</p> <pre><code>COMPOSE_FILE='caddy.yml,seafile-pe.yml'\n</code></pre> <p>By adding or removing yml files from this list, you control the composition during runtime, eliminating the need for a single, extensive docker-compose.yml file.</p> <p>With this understanding, the subsequent installation descriptions should be straightforward to follow.</p> <p>Primarily, use copy and paste</p> <p>Throughout the installation process, we strive to eliminate the need for manual file editing. Most commands can be executed by simply copying and pasting. Look for the copy-and-paste icon () at the end of each code box, which conveniently copies the content to your clipboard. This helps prevent typing errors and ensures a smoother installation experience.</p>"},{"location":"docker/migrate/","title":"Migrate","text":""},{"location":"docker/requirements/","title":"Requirements","text":"<p>One of the main advantages of Sefaile against other solutions is, that you can run Seafile on your own hardware or on any server your like. Still there are some requirements:</p> <ul> <li>Linux-Server with Root-Shell</li> <li>Public domain pointing to your server</li> <li>Open Ports for HTTP and HTTPS access (probably more ports for other components)</li> <li>The ports should not be already in use by another proxy such as NGINX or Apache</li> </ul> <p>Does this sounds complicated? Not really. So lets get started.</p> <p>Let's begin with the installation in the root-shell</p> <p>If you need more information, you can get more details in this article.</p>"},{"location":"docker/requirements/#platform-support","title":"Platform support","text":"<p>Seafile uses <code>docker</code> and <code>docker compose</code>. Therefore it should run as long as docker virtualisation is available. Still we recommend Debian 11 or newer because we always use Debian for production and testing.</p> <p>Currently only x86/x64 architecture is officially supported. Bigger customers might get support with ARM based systems.</p>"},{"location":"docker/requirements/#hardware","title":"Hardware","text":"<p>Seafile Server requires at least</p> <ul> <li>2 CPU cores</li> <li>4 GB RAM</li> <li>50 GB SSD</li> </ul> <p>These resources guarantee good performance for most applications with up to 100 users. More important than a lot of CPU or RAM is a fast storage for the database.</p> <p>Also be aware that typically you will require a lot of space to store all the files of your users. Next to local storage, seafile supports S3 and network file systems like nfs.</p> <p>As soon as you have more than 100 users, you should consider adding additional ressources or extending your Seafile Platform to use a cluster.</p> <p>Additional components need additional ressources</p> <p>These hardware requirements are for Seafile Server. If you install additional components like collabora online or onlyoffice the requirements for these ressources stack up and you have to add additional ressources.</p> <p>For sure we need a root shell on this server to execute the installation commands.</p>"},{"location":"docker/requirements/#public-available-domain","title":"Public available domain","text":"<p>This manual assumes that you have one domain or subdomain that points to your public IP address of your server.</p> <pre><code>flowchart LR\n    A[User /\\nBrowser]\n    B[Domain / Subdomain\\nPorts 80+443]\n    C[Server or VM\\nwith Docker]\n    A--&gt;B\n    B--&gt;C</code></pre> <p>For sure, it is possible to run Seafile without an internet connection (air-gapped) or with custom SSL certificates. This requires additional settings which are explained in separate chapters.</p>"},{"location":"docker/requirements/#ports","title":"Ports","text":"<p>SeaTable needs by default only the default ports 80 (HTTP) and 443 (HTTPS).</p> <ul> <li>80: HTTP access is necessary to receive a Let's Encrypt certificate</li> <li>443: HTTPS is the main entrance to SeaTable Server</li> </ul>"},{"location":"docker/requirements/#license","title":"License","text":"<p>Seafile Professional requires a license to start. Without a license you can only create up to three users. Licenses with more than three users can be obtained from datamate GmbH &amp; Co. KG. Just contact us and ask for a quote.</p> <p>Seafile Community does not require a license, but is not supported by this deployment.</p>"},{"location":"docker/single-node/","title":"Single-Node installation of a Seafile Server","text":"<p>Alright, let's dive in. This article will guide you through the process of installing a Seafile server with a Caddy web server. By the end of this article, your new Seafile server will be accessible via HTTPS with your custom domain. To begin, open a root shell on your server.</p> <p>Installation made easy</p> <p>Most commands that are required to install a Seafile Server are provided in a way, that you can just simply copy and paste the commands into your command line. Use the () icon at the top-right of the code boxes.</p>"},{"location":"docker/single-node/#install-basic-tools","title":"Install basic tools","text":"<p>The following command installs basic tools that are used in the following manual. Usually all these tools are already installed on your linux server.</p> <pre><code>apt update &amp;&amp; \\\napt -y install curl pwgen tree wget tar nano\n</code></pre>"},{"location":"docker/single-node/#install-docker-and-docker-compose-plugin","title":"Install Docker and Docker Compose Plugin","text":"<p>At get.docker.com, you'll find a script designed for the easy and convenient installation of the Docker Engine. While the script isn't recommended for production environments, it has shown no issues in our observations. You can effortlessly install Docker using this single command:</p> <pre><code>curl -fsSL get.docker.com | bash\n</code></pre> <p>Alternatively, you can opt to follow Docker's official installation instructions</p>"},{"location":"docker/single-node/#install-seafile-server","title":"Install Seafile Server","text":"<p>This installation assumes that all Seafile components are installed under <code>/opt</code>. We highly recommended to keep this folder structure. All articles in the manual assume Seafile's installation in this directory.</p>"},{"location":"docker/single-node/#1-create-basic-structure","title":"1. Create basic structure","text":"<p>Simply copy and paste the following command into your command line to execute. This code will download the latest yml files from repository  seafile-release.</p> <pre><code>mkdir /opt/seafile-compose &amp;&amp; \\\ncd /opt/seafile-compose &amp;&amp; \\\nwget -c https://github.com/datamate-rethink-it/seafile-release/releases/latest/download/seafile-compose.tar.gz \\\n-O - | tar -xz -C /opt/seafile-compose &amp;&amp; \\\ncp -n .env-release .env\n</code></pre> <p>To get an overview of the downloaded files, use the <code>tree</code> command.</p> <pre><code>tree -a /opt/seafile-compose\n</code></pre> <p>The expected output should appear as follows.</p> <pre><code># this should be the output of the tree command...\n/opt/seafile-compose\n\u251c\u2500\u2500 caddy.yml\n\u251c\u2500\u2500 collabora.yml\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 .env-release\n\u251c\u2500\u2500 .galera.yml\n\u251c\u2500\u2500 onlyoffice.yml\n\u251c\u2500\u2500 restic.yml\n\u251c\u2500\u2500 seafile-pe-cluster-backend.yml\n\u251c\u2500\u2500 seafile-pe-cluster-frontend.yml\n\u251c\u2500\u2500 seafile-pe.yml\n\u251c\u2500\u2500 seafile_storage_classes.json\n</code></pre> <p>Don't change these yml files</p> <p>Generally, there's no need to make changes to the different .yml files in most cases. Also they will be overriden with the next update. Instead you should create a copy and rename the file. Adjustments should be made only by experienced Docker administrators.</p> <pre><code># Example to create a custom copy:\ncp seafile-pe.yml custom-seafile-pe.yml\n</code></pre>"},{"location":"docker/single-node/#2-create-a-directory-for-elasticsearch","title":"2. Create a directory for Elasticsearch","text":"<p>Elastisearch does not run as root user and therefore it is necessary to create the directory for the volume mount upfront. Otherwise elasticsearch has no permission to write into this directory.</p> <pre><code>mkdir -p /opt/seafile-elasticsearch/data &amp;&amp; \\\nchown -R 1000 /opt/seafile-elasticsearch\n</code></pre>"},{"location":"docker/single-node/#3-generate-some-secrets","title":"3. Generate some secrets","text":"<p>Seafile is configured with the hidden <code>.env</code> file (=enviroment configuration file) that is stored in the folder <code>/opt/seafile-compose</code>.</p> <p>We utilize <code>pwgen</code> to create secure passwords for your admin account, the database root password and other stuff. The following commands will generate such passwords and include them in the <code>.env'</code> file.</p> <pre><code>sed -i \"s/^SEAFILE_ADMIN_PASSWORD=.*/SEAFILE_ADMIN_PASSWORD=$(pwgen 40 1)/\" .env\nsed -i \"s/^SEAFILE_MYSQL_ROOT_PASSWORD=.*/SEAFILE_MYSQL_ROOT_PASSWORD=$(pwgen 40 1)/\" .env\nsed -i \"s/^SEAHUB__SECRET_KEY=.*/SEAHUB__SECRET_KEY=$(pwgen 40 1)/\" .env\nsed -i \"s/^SEAFILE__notification__jwt_private_key=.*/SEAFILE__notification__jwt_private_key=$(pwgen 40 1)/\" .env\n</code></pre> <p>Alternatively, you can manually add your own passwords.</p>"},{"location":"docker/single-node/#4-complete-settings-in-the-env-file","title":"4. Complete settings in the .env file","text":"<p>Open the <code>.env</code> file with the editor of your choice, like <code>nano</code> or <code>vim</code>.</p> <pre><code>nano /opt/seafile-compose/.env\n</code></pre> <p>Continue setting up your Seafile server by adjusting only three more variables. These are:</p> <ul> <li>TIME_ZONE</li> <li>SEAFILE_SERVER_HOSTNAME</li> <li>SEAFILE_ADMIN_EMAIL</li> </ul> <pre><code># components to be used\nCOMPOSE_FILE='caddy.yml,seafile-pe.yml' # (1)!\nCOMPOSE_PATH_SEPARATOR=','\n\n# system settings\nTIME_ZONE='Europe/Berlin' # (2)!\n\n# seafile server base url\nSEAFILE_SERVER_HOSTNAME='seafile.example.com' # (3)!\n\n# initial web admin\nSEAFILE_ADMIN_EMAIL='me@example.com'\nSEAFILE_ADMIN_PASSWORD='topsecret'\n\n# database\nSEAFILE_MYSQL_ROOT_PASSWORD=\n\n# seahub secret key\nSEAHUB__SECRET_KEY=\n\n# jwt private key for seafile notification server\nSEAFILE__notification__jwt_private_key=\n</code></pre> <ol> <li>COMPOSE_FILE is a comma separated list without spaces. This list defines which components should run on this server. Leave <code>caddy.yml</code> and <code>seatable-server.yml</code> at the beginning. You will add more components at a later time.</li> <li>Get a list of timezones from Wikipedia.</li> <li>Select your domain or subdomain that points to your Server (without https://). You have to set an A-Record or CNAME pointing to your IP.     If you don't have an URL and want to use an IP, then use the free service nip.io and add your-ip.nip.io (e.g. 5.35.28.112.nip.io).</li> </ol>"},{"location":"docker/single-node/#5-get-a-license","title":"5. Get a license","text":"<p>Seafile Enterprise requires a license to start</p> <p>Seafile use for up to three users is free. If you enjoy Seafile and are contemplating a larger license, please get in touch with us.</p> <p>We assume that you have a license and that you save it to <code>/opt/seafile-compose/seafile-license.txt</code>.</p> <p>If you don't have a license, then comment the part in the yml file, where it mounts the license file to the server like in the following example.</p> <pre><code>services:\n  seafile:\n    ...\n    volume:\n        - /opt/seafile-server:/shared\n        #- type: bind\n        #  source: \"./seafile-license.txt\"\n        #  target: \"/shared/seafile/seafile-license.txt\"\n        #  read_only: ${SEAFILE_LICENSE_FORCE_READ_ONLY:-false}\n</code></pre>"},{"location":"docker/single-node/#6-fire-up-the-server","title":"6. Fire up the server","text":"<p>Now it is time to run the following command to download and initiate the docker images for the initial setup. This process will require some time.</p> <pre><code>docker compose up -d\n</code></pre> <p>If the process completed successfully, you can now open your web browser and access Seafile using the URL you specified in your <code>.env</code> file. Sign in using the credentials you provided in the same file.</p> <p> Congratulations! You've completed the basic setup of your Seafile Server.</p>"},{"location":"docker/single-node/#next-steps","title":"Next steps","text":"<p>Your Seafile journey has just begun! While you can dive straight into Seafile, uploading some files, adding users, utilizing the API, and more, there's an array of possibilities to explore.</p>"},{"location":"docker/upgrade/","title":"Upgrade","text":""},{"location":"docker/extensions/collabora/","title":"Collabora","text":""},{"location":"docker/extensions/onlyoffice/","title":"Onlyoffice","text":""},{"location":"docker/extensions/restic/","title":"restic","text":""},{"location":"introduction/get-started/","title":"Start","text":"<p>coming soon...</p>"},{"location":"introduction/key-features-seafile/","title":"Short introduction to Seafile","text":"<p>Seafile is an open-source file synchronization and sharing platform, similar to services like Dropbox or Google Drive, but with a focus on security, scalability, and privacy. It allows individuals and organizations to create their own private cloud storage solution, where users can sync files across multiple devices, share files and folders, and collaborate on documents in real-time.</p>"},{"location":"introduction/key-features-seafile/#key-features-of-seafile","title":"Key Features of Seafile","text":"<ul> <li>File Synchronization: Seafile enables files to be synced across different devices automatically, ensuring that users always have access to the latest versions of their documents.</li> <li>File Sharing: Users can share files and folders with others, both within and outside of their organization, with various levels of access control.</li> <li>High Performance: Seafile is designed for speed and efficiency, offering lightning-fast file syncing and sharing. It operates with minimal resource consumption on the server, making it an ideal choice for environments where performance and resource optimization are crucial.</li> <li>Reliability: Seafile ensures data integrity and protection against corruption through robust mechanisms and consistent performance. Its stable architecture requires minimal maintenance, providing a dependable solution that works seamlessly in the background without constant oversight.</li> <li>Security: Seafile offers robust security features, including client-side encryption, ensuring that files are encrypted before they are uploaded to the server. This makes it a good choice for organizations with high privacy requirements.</li> <li>Scalability: Seafile is designed to be scalable, allowing it to support a large number of users and files, making it suitable for both small teams and large enterprises.</li> <li>Cross-Platform Support: It supports multiple platforms, including Windows, macOS, Linux, iOS, and Android, providing flexibility for users across different devices.</li> </ul> <p>Seafile is available in both a Community Edition, which is free and open-source, and a Professional Edition, which includes additional features and is designed for enterprise use, with paid support options.</p>"},{"location":"k8s/concept/","title":"Concept","text":""}]}